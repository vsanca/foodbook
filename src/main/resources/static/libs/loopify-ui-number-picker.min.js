!function(){"use strict";var e=angular.module("loopify.ui.numberPicker",["loopify.ui.numberPicker.templates"]);e.directive("loopifyNumberPicker",["numberPickerService",function(e){var n={min:0,max:1/0,step:1,enter:!1,percent:!1,label:void 0,methodRound:void 0},r={restrict:"E",scope:{value:"=",min:"@",max:"@",step:"@",enter:"@",percent:"@",label:"@",methodRound:"@"}};return angular.extend(r,{link:function(r){var a=e.assignExtend(r,n);if(!e.checkNumber([a.min,a.max,a.step]))throw new Error("some value: (min, max or step) is not a valid number");r.percent&&(r.percentLabel="%",r.isPercent=!0),r.id=e.getId(),e.transform(a),a.min>r.value&&(r.value=a.min),a.max<r.value&&(r.value=a.max),r.incrementValue=function(){r.value>=(r.isPercent?100:a.max)||(r.value=+r.value+a.step,r.$broadcast("change"))},r.decrementValue=function(){r.value<=(r.isPercent?0:a.min)||(r.value=+r.value-a.step,r.$broadcast("change"))},r.togglePercentageValue=function(){r.isPercent=!r.isPercent,r.isPercent?r.percentLabel="%":r.percentLabel=r.label},r.$watch("percentLabel",function(e,n){return e||n?void(r.isPercent?r.value=r.methodRound?Math[r.methodRound](r.value/a.max*100):r.value/a.max*100:r.value=r.methodRound?Math[r.methodRound](a.max*r.value/100):a.max*r.value/100):!1})},templateUrl:"templates/numberPicker.html"})}]),e.directive("loopifyInputNumberPicker",["numberPickerService",function(e){return{link:function(n,r){var a=function(){var r=n.isPercent?0:+n.min,a=n.isPercent?100:+n.max;n.canDown=n.value>r,n.canUp=n.value<a,n.isMaxValue=!n.canUp,n.isMinValue=!n.canDown,(!e.checkNumber(n.value)||n.value>a||n.value<r)&&""!==n.value&&(n.value=e.checkNumber(n.oldValue)?n.oldValue:n.min),n.oldValue=n.value};r.on("change",function(){a(),n.$apply()}),n.$on("change",a),a()}}}]),e.service("numberPickerService",function(){return{index:0,assignExtend:function(e,n){var r={};for(var a in n)e[a]?r[a]=e[a]:(r[a]=n[a],e[a]=n[a]);return r},isNumber:function(e){var n=Number(e);return!isNaN(n)&&n===+e},toNumber:function(e){return Number(e)},checkNumber:function(e){var n=this,r=0;return angular.isArray(e)?(angular.forEach(e,function(e){n.isNumber(e)||(r+=1)}),r>0?!1:!0):this.isNumber(e)?!0:!1},transform:function(e){for(var n in e)e[n]=this.toNumber(e[n])},getId:function(){return this.index+=1,"number-picker-"+this.index}}})}();